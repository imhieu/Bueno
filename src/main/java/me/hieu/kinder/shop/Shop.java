package me.hieu.kinder.shop;

import lombok.Getter;
import org.bukkit.Material;
import org.bukkit.inventory.ItemStack;

/**
 * @author hieu
 * @date 13/09/2023
 */

@Getter
public enum Shop {

    //ORES

    NETHERITE_INGOT(new ItemStack(Material.NETHERITE_INGOT), 16, 1.20, TradeType.SELLING),
    ANCIENT_DEBRIS(new ItemStack(Material.ANCIENT_DEBRIS), 8, 1.00, TradeType.SELLING),
    DIAMOND(new ItemStack(Material.DIAMOND), 16, 1.05, TradeType.SELLING),
    EMERALD(new ItemStack(Material.EMERALD), 16, 0.90, TradeType.SELLING),
    REDSTONE(new ItemStack(Material.REDSTONE), 16, 0.75, TradeType.SELLING),
    LAPIS_LAZULI(new ItemStack(Material.LAPIS_LAZULI), 16, 0.60, TradeType.SELLING),
    GOLD_INGOT(new ItemStack(Material.GOLD_INGOT), 16, 0.45, TradeType.SELLING),
    IRON_INGOT(new ItemStack(Material.IRON_INGOT), 16, 0.30, TradeType.SELLING),
    COPPER_INGOT(new ItemStack(Material.COPPER_INGOT), 16, 0.25, TradeType.SELLING),
    COAL(new ItemStack(Material.COAL), 16, 0.15, TradeType.SELLING),
    RAW_GOLD(new ItemStack(Material.RAW_GOLD), 16, 0.40, TradeType.SELLING),
    RAW_IRON(new ItemStack(Material.RAW_IRON), 16, 0.25, TradeType.SELLING),
    RAW_COPPER(new ItemStack(Material.RAW_COPPER), 16, 0.20, TradeType.SELLING),
    QUARTZ(new ItemStack(Material.QUARTZ), 16, 0.25, TradeType.SELLING),
    AMETHYST_SHARD(new ItemStack(Material.AMETHYST_SHARD), 16, 0.35, TradeType.SELLING),

    //FOOD

    COOKED_BEEF(new ItemStack(Material.COOKED_BEEF), 16, 0.50, TradeType.BUYING),
    COOKED_PORKCHOP(new ItemStack(Material.COOKED_PORKCHOP), 16, 0.50, TradeType.BUYING),
    COOKED_CHICKEN(new ItemStack(Material.COOKED_CHICKEN), 16, 0.50, TradeType.BUYING),
    COOKED_MUTTON(new ItemStack(Material.COOKED_MUTTON), 16, 0.50, TradeType.BUYING),
    COOKED_RABBIT(new ItemStack(Material.COOKED_RABBIT), 16, 0.50, TradeType.BUYING),
    COOKED_COD(new ItemStack(Material.COOKED_COD), 16, 0.50, TradeType.BUYING),
    COOKED_SALMON(new ItemStack(Material.COOKED_SALMON), 16, 0.50, TradeType.BUYING),
    BEEF(new ItemStack(Material.BEEF), 16, 0.30, TradeType.BUYING),
    PORKCHOP(new ItemStack(Material.PORKCHOP), 16, 0.30, TradeType.BUYING),
    CHICKEN(new ItemStack(Material.CHICKEN), 16, 0.30, TradeType.BUYING),
    MUTTON(new ItemStack(Material.MUTTON), 16, 0.30, TradeType.BUYING),
    RABBIT(new ItemStack(Material.RABBIT), 16, 0.30, TradeType.BUYING),
    COD(new ItemStack(Material.COD), 16, 0.30, TradeType.BUYING),
    SALMON(new ItemStack(Material.SALMON), 16, 0.30, TradeType.BUYING),
    RABBIT_STEW(new ItemStack(Material.RABBIT_STEW), 16, 0.60, TradeType.BUYING),
    MUSHROOM_STEW(new ItemStack(Material.MUSHROOM_STEW), 16, 0.40, TradeType.BUYING),
    SUSPICIOUS_STEW(new ItemStack(Material.SUSPICIOUS_STEW), 16, 0.40, TradeType.BUYING),
    CARROT(new ItemStack(Material.CARROT), 16, 0.20, TradeType.BUYING),
    POTATO(new ItemStack(Material.POTATO), 16, 0.20, TradeType.BUYING),
    BAKED_POTATO(new ItemStack(Material.BAKED_POTATO), 16, 0.30, TradeType.BUYING),
    BEETROOT(new ItemStack(Material.BEETROOT), 16, 0.15, TradeType.BUYING),
    BEETROOT_SOUP(new ItemStack(Material.BEETROOT_SOUP), 16, 0.40, TradeType.BUYING),
    WHEAT(new ItemStack(Material.WHEAT), 16, 0.15, TradeType.BUYING),
    BREAD(new ItemStack(Material.BREAD), 16, 0.25, TradeType.BUYING),
    APPLE(new ItemStack(Material.APPLE), 16, 0.30, TradeType.BUYING),
    MELON_SLICE(new ItemStack(Material.MELON_SLICE), 16, 0.20, TradeType.BUYING),
    MELON(new ItemStack(Material.MELON), 16, 0.25, TradeType.BUYING),
    SWEET_BERRIES(new ItemStack(Material.SWEET_BERRIES), 16, 0.20, TradeType.BUYING),
    GLOW_BERRIES(new ItemStack(Material.GLOW_BERRIES), 16, 0.20, TradeType.BUYING),
    COOKIES(new ItemStack(Material.COOKIE), 16, 0.15, TradeType.BUYING),
    PUMPKIN_PIE(new ItemStack(Material.PUMPKIN_PIE), 16, 0.35, TradeType.BUYING),
    SUGAR(new ItemStack(Material.SUGAR), 16, 0.10, TradeType.BUYING),
    CAKE(new ItemStack(Material.CAKE), 1, 0.50, TradeType.BUYING),
    HONEY_BOTTLE(new ItemStack(Material.HONEY_BOTTLE), 16, 0.25, TradeType.BUYING),
    DRIED_KELP(new ItemStack(Material.DRIED_KELP), 16, 0.10, TradeType.BUYING),
    ROTTEN_FLESH(new ItemStack(Material.ROTTEN_FLESH), 16, 0.05, TradeType.BUYING),

    STONE(new ItemStack(Material.STONE), 16, 0.15, TradeType.BUYING),
    COBBLESTONE(new ItemStack(Material.COBBLESTONE), 16, 0.10, TradeType.BUYING),
    ANDESITE(new ItemStack(Material.ANDESITE), 16, 0.10, TradeType.BUYING),
    DIORITE(new ItemStack(Material.DIORITE), 16, 0.10, TradeType.BUYING),
    GRANITE(new ItemStack(Material.GRANITE), 16, 0.10, TradeType.BUYING),
    DEEPSLATE(new ItemStack(Material.DEEPSLATE), 16, 0.15, TradeType.BUYING),
    BLACKSTONE(new ItemStack(Material.BLACKSTONE), 16, 0.15, TradeType.BUYING),
    POLISHED_ANDESITE(new ItemStack(Material.POLISHED_ANDESITE), 16, 0.15, TradeType.BUYING),
    POLISHED_DIORITE(new ItemStack(Material.POLISHED_DIORITE), 16, 0.15, TradeType.BUYING),
    POLISHED_GRANITE(new ItemStack(Material.POLISHED_GRANITE), 16, 0.15, TradeType.BUYING),
    STONE_BRICKS(new ItemStack(Material.STONE_BRICKS), 16, 0.15, TradeType.BUYING),
    CRACKED_STONE_BRICKS(new ItemStack(Material.CRACKED_STONE_BRICKS), 16, 0.15, TradeType.BUYING),
    CHISELED_STONE_BRICKS(new ItemStack(Material.CHISELED_STONE_BRICKS), 16, 0.15, TradeType.BUYING),
    MOSSY_STONE_BRICKS(new ItemStack(Material.MOSSY_STONE_BRICKS), 16, 0.15, TradeType.BUYING),
    NETHER_BRICKS(new ItemStack(Material.NETHER_BRICKS), 16, 0.20, TradeType.BUYING),
    RED_NETHER_BRICKS(new ItemStack(Material.RED_NETHER_BRICKS), 16, 0.25, TradeType.BUYING),
    END_STONE(new ItemStack(Material.END_STONE), 16, 0.20, TradeType.BUYING),
    END_STONE_BRICKS(new ItemStack(Material.END_STONE_BRICKS), 16, 0.25, TradeType.BUYING),
    PURPUR_BLOCK(new ItemStack(Material.PURPUR_BLOCK), 16, 0.25, TradeType.BUYING),
    OBSIDIAN(new ItemStack(Material.OBSIDIAN), 16, 0.30, TradeType.BUYING),
    PRISMARINE(new ItemStack(Material.PRISMARINE), 16, 0.25, TradeType.BUYING),
    PRISMARINE_BRICKS(new ItemStack(Material.PRISMARINE_BRICKS), 16, 0.30, TradeType.BUYING),
    DARK_PRISMARINE(new ItemStack(Material.DARK_PRISMARINE), 16, 0.35, TradeType.BUYING),
    SEA_LANTERN(new ItemStack(Material.SEA_LANTERN), 16, 0.40, TradeType.BUYING),
    SANDSTONE(new ItemStack(Material.SANDSTONE), 16, 0.10, TradeType.BUYING),
    CUT_SANDSTONE(new ItemStack(Material.CUT_SANDSTONE), 16, 0.15, TradeType.BUYING),
    CHISELED_SANDSTONE(new ItemStack(Material.CHISELED_SANDSTONE), 16, 0.15, TradeType.BUYING),
    RED_SANDSTONE(new ItemStack(Material.RED_SANDSTONE), 16, 0.10, TradeType.BUYING),
    CHISELED_RED_SANDSTONE(new ItemStack(Material.CHISELED_RED_SANDSTONE), 16, 0.15, TradeType.BUYING),
    CUT_RED_SANDSTONE(new ItemStack(Material.CUT_RED_SANDSTONE), 16, 0.15, TradeType.BUYING),
    TERRACOTTA(new ItemStack(Material.TERRACOTTA), 16, 0.20, TradeType.BUYING),
    QUARTZ_BLOCK(new ItemStack(Material.QUARTZ_BLOCK), 16, 0.30, TradeType.BUYING),
    CHISELED_QUARTZ_BLOCK(new ItemStack(Material.CHISELED_QUARTZ_BLOCK), 16, 0.35, TradeType.BUYING),
    SMOOTH_QUARTZ(new ItemStack(Material.SMOOTH_QUARTZ), 16, 0.35, TradeType.BUYING),
    SMOOTH_STONE(new ItemStack(Material.SMOOTH_STONE), 16, 0.15, TradeType.BUYING),
    BRICKS(new ItemStack(Material.BRICKS), 16, 0.20, TradeType.BUYING),

    WHITE_WOOL(new ItemStack(Material.WHITE_WOOL), 16, 0.25, TradeType.BUYING),
    ORANGE_WOOL(new ItemStack(Material.ORANGE_WOOL), 16, 0.30, TradeType.BUYING),
    MAGENTA_WOOL(new ItemStack(Material.MAGENTA_WOOL), 16, 0.30, TradeType.BUYING),
    LIGHT_BLUE_WOOL(new ItemStack(Material.LIGHT_BLUE_WOOL), 16, 0.30, TradeType.BUYING),
    YELLOW_WOOL(new ItemStack(Material.YELLOW_WOOL), 16, 0.30, TradeType.BUYING),
    LIME_WOOL(new ItemStack(Material.LIME_WOOL), 16, 0.30, TradeType.BUYING),
    PINK_WOOL(new ItemStack(Material.PINK_WOOL), 16, 0.30, TradeType.BUYING),
    GRAY_WOOL(new ItemStack(Material.GRAY_WOOL), 16, 0.30, TradeType.BUYING),
    LIGHT_GRAY_WOOL(new ItemStack(Material.LIGHT_GRAY_WOOL), 16, 0.30, TradeType.BUYING),
    CYAN_WOOL(new ItemStack(Material.CYAN_WOOL), 16, 0.30, TradeType.BUYING),
    PURPLE_WOOL(new ItemStack(Material.PURPLE_WOOL), 16, 0.30, TradeType.BUYING),
    BLUE_WOOL(new ItemStack(Material.BLUE_WOOL), 16, 0.30, TradeType.BUYING),
    BROWN_WOOL(new ItemStack(Material.BROWN_WOOL), 16, 0.30, TradeType.BUYING),
    GREEN_WOOL(new ItemStack(Material.GREEN_WOOL), 16, 0.30, TradeType.BUYING),
    RED_WOOL(new ItemStack(Material.RED_WOOL), 16, 0.30, TradeType.BUYING),
    BLACK_WOOL(new ItemStack(Material.BLACK_WOOL), 16, 0.30, TradeType.BUYING),
    WHITE_CONCRETE(new ItemStack(Material.WHITE_CONCRETE), 16, 0.25, TradeType.BUYING),
    ORANGE_CONCRETE(new ItemStack(Material.ORANGE_CONCRETE), 16, 0.30, TradeType.BUYING),
    MAGENTA_CONCRETE(new ItemStack(Material.MAGENTA_CONCRETE), 16, 0.30, TradeType.BUYING),
    LIGHT_BLUE_CONCRETE(new ItemStack(Material.LIGHT_BLUE_CONCRETE), 16, 0.30, TradeType.BUYING),
    YELLOW_CONCRETE(new ItemStack(Material.YELLOW_CONCRETE), 16, 0.30, TradeType.BUYING),
    LIME_CONCRETE(new ItemStack(Material.LIME_CONCRETE), 16, 0.30, TradeType.BUYING),
    PINK_CONCRETE(new ItemStack(Material.PINK_CONCRETE), 16, 0.30, TradeType.BUYING),
    GRAY_CONCRETE(new ItemStack(Material.GRAY_CONCRETE), 16, 0.30, TradeType.BUYING),
    LIGHT_GRAY_CONCRETE(new ItemStack(Material.LIGHT_GRAY_CONCRETE), 16, 0.30, TradeType.BUYING),
    CYAN_CONCRETE(new ItemStack(Material.CYAN_CONCRETE), 16, 0.30, TradeType.BUYING),
    PURPLE_CONCRETE(new ItemStack(Material.PURPLE_CONCRETE), 16, 0.30, TradeType.BUYING),
    BLUE_CONCRETE(new ItemStack(Material.BLUE_CONCRETE), 16, 0.30, TradeType.BUYING),
    BROWN_CONCRETE(new ItemStack(Material.BROWN_CONCRETE), 16, 0.30, TradeType.BUYING),
    GREEN_CONCRETE(new ItemStack(Material.GREEN_CONCRETE), 16, 0.30, TradeType.BUYING),
    RED_CONCRETE(new ItemStack(Material.RED_CONCRETE), 16, 0.30, TradeType.BUYING),
    BLACK_CONCRETE(new ItemStack(Material.BLACK_CONCRETE), 16, 0.30, TradeType.BUYING),
    WHITE_TERRACOTTA(new ItemStack(Material.WHITE_TERRACOTTA), 16, 0.25, TradeType.BUYING),
    ORANGE_TERRACOTTA(new ItemStack(Material.ORANGE_TERRACOTTA), 16, 0.30, TradeType.BUYING),
    MAGENTA_TERRACOTTA(new ItemStack(Material.MAGENTA_TERRACOTTA), 16, 0.30, TradeType.BUYING),

    GRASS_BLOCK(new ItemStack(Material.GRASS_BLOCK), 16, 0.25, TradeType.BUYING),
    DIRT(new ItemStack(Material.DIRT), 16, 0.20, TradeType.BUYING),
    COARSE_DIRT(new ItemStack(Material.COARSE_DIRT), 16, 0.20, TradeType.BUYING),
    PODZOL(new ItemStack(Material.PODZOL), 16, 0.30, TradeType.BUYING),
    MYCELIUM(new ItemStack(Material.MYCELIUM), 16, 0.30, TradeType.BUYING),
    SAND(new ItemStack(Material.SAND), 16, 0.15, TradeType.BUYING),
    RED_SAND(new ItemStack(Material.RED_SAND), 16, 0.15, TradeType.BUYING),
    GRAVEL(new ItemStack(Material.GRAVEL), 16, 0.15, TradeType.BUYING),
    CLAY(new ItemStack(Material.CLAY), 16, 0.20, TradeType.BUYING),
    SOUL_SAND(new ItemStack(Material.SOUL_SAND), 16, 0.20, TradeType.BUYING),
    SOUL_SOIL(new ItemStack(Material.SOUL_SOIL), 16, 0.20, TradeType.BUYING),
    NETHERRACK(new ItemStack(Material.NETHERRACK), 16, 0.15, TradeType.BUYING),
    GLOWSTONE(new ItemStack(Material.GLOWSTONE), 16, 0.25, TradeType.BUYING),
    PUMPKIN(new ItemStack(Material.PUMPKIN), 16, 0.25, TradeType.BUYING),
    VINES(new ItemStack(Material.VINE), 16, 0.25, TradeType.BUYING),
    OAK_LOG(new ItemStack(Material.OAK_LOG), 16, 0.20, TradeType.BUYING),
    OAK_WOOD(new ItemStack(Material.OAK_WOOD), 16, 0.20, TradeType.BUYING),
    SPRUCE_LOG(new ItemStack(Material.SPRUCE_LOG), 16, 0.20, TradeType.BUYING),
    BIRCH_LOG(new ItemStack(Material.BIRCH_LOG), 16, 0.20, TradeType.BUYING),
    JUNGLE_LOG(new ItemStack(Material.JUNGLE_LOG), 16, 0.20, TradeType.BUYING),
    ACACIA_LOG(new ItemStack(Material.ACACIA_LOG), 16, 0.20, TradeType.BUYING),
    DARK_OAK_LOG(new ItemStack(Material.DARK_OAK_LOG), 16, 0.20, TradeType.BUYING),
    MUSHROOM_BLOCK(new ItemStack(Material.RED_MUSHROOM_BLOCK), 16, 0.25, TradeType.BUYING),
    BAMBOO(new ItemStack(Material.BAMBOO), 16, 0.20, TradeType.BUYING),
    COCOA_BEANS(new ItemStack(Material.COCOA_BEANS), 16, 0.25, TradeType.BUYING),

    CRAFTING_TABLE(new ItemStack(Material.CRAFTING_TABLE), 8, 0.20, TradeType.BUYING),
    FURNACE(new ItemStack(Material.FURNACE), 16, 0.50, TradeType.BUYING),
    BLAST_FURNACE(new ItemStack(Material.BLAST_FURNACE), 16, 0.50, TradeType.BUYING),
    SMOKER(new ItemStack(Material.SMOKER), 16, 0.50, TradeType.BUYING),
    CARTOGRAPHY_TABLE(new ItemStack(Material.CARTOGRAPHY_TABLE), 16, 0.50, TradeType.BUYING),
    COMPOSTER(new ItemStack(Material.COMPOSTER), 16, 0.25, TradeType.BUYING),
    LOOM(new ItemStack(Material.LOOM), 16, 0.30, TradeType.BUYING),
    SMITHING_TABLE(new ItemStack(Material.SMITHING_TABLE), 16, 0.40, TradeType.BUYING),
    GRINDSTONE(new ItemStack(Material.GRINDSTONE), 16, 0.40, TradeType.BUYING),
    ANVIL(new ItemStack(Material.ANVIL), 16, 0.50, TradeType.BUYING),
    JUKEBLOCK(new ItemStack(Material.JUKEBOX), 16, 0.50, TradeType.BUYING),
    ENCHANTING_TABLE(new ItemStack(Material.ENCHANTING_TABLE), 16, 0.50, TradeType.BUYING),
    LECTERN(new ItemStack(Material.LECTERN), 16, 0.40, TradeType.BUYING),

    REDSTONE_BLOCK(new ItemStack(Material.REDSTONE_BLOCK), 16, 0.40, TradeType.BUYING),
    REPEATER(new ItemStack(Material.REPEATER), 16, 0.25, TradeType.BUYING),
    COMPARATOR(new ItemStack(Material.COMPARATOR), 16, 0.25, TradeType.BUYING),
    REDSTONE_TORCH(new ItemStack(Material.REDSTONE_TORCH), 16, 0.15, TradeType.BUYING),
    LEVER(new ItemStack(Material.LEVER), 16, 0.15, TradeType.BUYING),
    POWERED_RAIL(new ItemStack(Material.POWERED_RAIL), 16, 0.20, TradeType.BUYING),
    DETECTOR_RAIL(new ItemStack(Material.DETECTOR_RAIL), 16, 0.20, TradeType.BUYING),
    ACTIVATOR_RAIL(new ItemStack(Material.ACTIVATOR_RAIL), 16, 0.20, TradeType.BUYING),
    REDSTONE_LAMP(new ItemStack(Material.REDSTONE_LAMP), 16, 0.35, TradeType.BUYING),
    DISPENSER(new ItemStack(Material.DISPENSER), 16, 0.40, TradeType.BUYING),
    DROPPER(new ItemStack(Material.DROPPER), 16, 0.40, TradeType.BUYING),
    HOPPER(new ItemStack(Material.HOPPER), 16, 0.45, TradeType.BUYING),
    TNT(new ItemStack(Material.TNT), 16, 0.35, TradeType.BUYING);

    private ItemStack item;
    private Integer amount;
    private Double price;
    private TradeType type;

    Shop(ItemStack item, Integer amount, Double price, TradeType type){
        this.item = item;
        this.amount = amount;
        this.price = price;
        this.type = type;
    }

}
